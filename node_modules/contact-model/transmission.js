class Transmission {
  type = 't'

  /**
   * @type {User}
   */
  from

  /**
   * TODO: channels
   * @type {string[]}
   */
  to = []

  datetime
  headers = {}
  payload
  static seals = []

  constructor (options = {}) {
    this.type = options.type
    this.from = options.from
    this.to = options.to || []
    this.headers = options.headers
    this.payload = options.payload
    this.datetime = options.datetime || Date.now()
  }

  isEmpty () {
    throw new Error('not implemented')
  }

  async seal () {
    throw new Error('not implemented')
  }

  async unseal () {
    throw new Error('not implemented')
  }

  async serialise () {
    return JSON.stringify(this)
  }

  static async deserialise (data) {
    const transmission = JSON.parse(data)
    return new this(transmission)
  }
}

export default Transmission
